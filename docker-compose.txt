version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - postgres
      - mongodb
      - redis
      - ai_service
    restart: unless-stopped
    networks:
      - soulsync_network

  # AI Microservice
  ai_service:
    build:
      context: .
      dockerfile: ai_service/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - soulsync_network

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: soulsync
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - soulsync_network

  # MongoDB Database
  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - soulsync_network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - soulsync_network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  soulsync_network:
    driver: bridge
